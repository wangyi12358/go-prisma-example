// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package server

import (
	"context"

	"go-zero-micro/service/product/rpc/internal/logic"
	"go-zero-micro/service/product/rpc/internal/svc"
	"go-zero-micro/service/product/rpc/types/product"
)

type ProductServer struct {
	svcCtx *svc.ServiceContext
	product.UnimplementedProductServer
}

func NewProductServer(svcCtx *svc.ServiceContext) *ProductServer {
	return &ProductServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServer) CreateProduct(ctx context.Context, in *product.CreateProductReq) (*product.ProductRes, error) {
	l := logic.NewCreateProductLogic(ctx, s.svcCtx)
	return l.CreateProduct(in)
}

func (s *ProductServer) ProductPage(ctx context.Context, in *product.ProductPageReq) (*product.ProductPageRes, error) {
	l := logic.NewProductPageLogic(ctx, s.svcCtx)
	return l.ProductPage(in)
}

func (s *ProductServer) CreateCategory(ctx context.Context, in *product.CategoryReq) (*product.CategoryRes, error) {
	l := logic.NewCreateCategoryLogic(ctx, s.svcCtx)
	return l.CreateCategory(in)
}

func (s *ProductServer) CategoryPage(ctx context.Context, in *product.ProductPageReq) (*product.ProductPageRes, error) {
	l := logic.NewCategoryPageLogic(ctx, s.svcCtx)
	return l.CategoryPage(in)
}
